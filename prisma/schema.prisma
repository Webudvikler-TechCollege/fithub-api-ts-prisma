// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id            Int     @id @default(autoincrement())
  name          String
  email         String  @unique
  passwordHash  String
  description   String
  refresh_token String
  is_active     Boolean @default(true)
  assetId       Int
  asset         asset   @relation(fields: [assetId], references: [id])

  teams    team[]
  ratings  rating[]
  bookings booking[]
}

model team {
  id              Int    @id @default(autoincrement())
  name            String
  description     String @db.Text
  day             String
  time            String
  max_participant Int
  userId          Int
  assetId         Int

  user     user      @relation(fields: [userId], references: [id])
  asset    asset     @relation(fields: [assetId], references: [id])
  ratings  rating[]
  bookings booking[]

  @@map("teams")
}

model asset {
  id  Int    @id @default(autoincrement())
  url String

  users user[]
  teams team[]

  @@map("assets")
}

model rating {
  id        Int @id @default(autoincrement())
  teamId    Int
  userId    Int
  numStars Int

  team team @relation(fields: [teamId], references: [id])
  user user @relation(fields: [userId], references: [id])

  @@unique([userId, teamId])
  @@map("ratings")
}

model booking {
  id     Int @id @default(autoincrement())
  userId Int
  teamId Int

  user user @relation(fields: [userId], references: [id])
  team team @relation(fields: [teamId], references: [id])

  @@unique([userId, teamId])
  @@map("bookings")
}
